# 给定一个 m * n 大小的二维矩阵 matrix。要求按照顺时针旋转的顺序，返回矩阵中的所有元素。
class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        #解题思路：找规律，控制好上下左右的坐标顺序
        up, down, left, right = 0, len(matrix)-1, 0, len(matrix[0])-1
        ans = []

        while True:
            #从左到右
            for i in range(left, right+1, 1):
                ans.append(matrix[up][i])  #行不变
            #下移一行
            up += 1
            #判断退出条件
            if up > down:
                break
            #最后一列从上到下
            for i in range(up, down+1, 1):
                ans.append(matrix[i][right])  #列不变
            #左移一列
            right -= 1
            #判断退出条件
            if left > right:
                break
            #遍历最后一行，从右至左，倒序
            for i in range(right, left-1, -1): 
                ans.append(matrix[down][i]) #行不变
            #上移一行
            down -= 1
            #判断退出条件
            if up > down:
                break
            #遍历第一列，从下到上，倒序
            for i in range(down, up-1, -1):
                ans.append(matrix[i][left])          #列不变
            #右移一列
            left += 1
            #判断退出条件
            if left > right:
                break
        return ans
            
