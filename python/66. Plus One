# 给定一个由 整数 组成的 非空 数组所表示的非负整数，数组每一位对应整数的一位数字。计算整数 +1 后的结果。

# 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        # //解题思路
        # //数组首位补零
        # //数组最后一位加1
        # //倒序判断元素是否是10，
        #     //如果是10，则将该元素置为0，下一个元素+1，
        #     //如果不是10，退出判断
        # //判断首元素是否为0，
        #     //为零表示+1没有影响首位，数组从索引为1的地方开始算
        #     //不为零表示+1影响了首位，返回数组即可
        digits = [0] + digits
        digits[len(digits)-1] += 1
        # digits[len(digits)-1] = digits[len(digits)-1] + 1

        #必须是倒序
        #range的范围是左闭右开[a,b)，0值取不到
        for i in range(len(digits)-1, 0, -1):
            if digits[i] == 10:
                digits[i] = 0
                digits[i-1] += 1
                # digits[i-1] = digits[i-1] +1
            else:
                break
        
        if digits[0] == 0:
            return digits[1:]
        else:
            return digits
