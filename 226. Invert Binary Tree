//镜像翻转一棵二叉树

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if  (root == nullptr) return root;
        
        /**** 前序遍历位置 ****/
        // root 节点需要交换它的左右子节点
        TreeNode *tmp = root->left;
        root->left = root->right;
        root->right = tmp;
        
        // 让左右子节点继续翻转它们的子节点
        invertTree(root->left);
        invertTree(root->right);
    
        return root;
    }
};
