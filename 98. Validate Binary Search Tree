/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        // if  (root == nullptr) return true;
   
        // if (root->left != nullptr && root->left->val >= root->val ) return false;

        // if (root->right != nullptr && root->right->val <= root->val) return false;

        // return isValidBST(root->left) && isValidBST(root->right);

        return compare(root, nullptr, nullptr);
    }

    //每个节点左子树的值要满足：min_val < node_val 
    //每个节点右子树的值要满足：node_val < max_val
    bool compare(TreeNode *root, TreeNode *min, TreeNode *max) {
        if (root == nullptr) return true;

        //根节点右子树所有节点的值都比根节点大，否则为假
        if (min != nullptr && min->val >= root->val) return false;
        
        //根节点左子树所有节点的值都比根节点小，否则为假
        if (max != nullptr && max->val <= root->val) return false;
        
        // 注意：下面的这个写法是错误的，min和max不能显示的写成nullptr，具体为什么????没有想明白
        // return isValidBST(root->left, nullptr, root) && isValidBST(root->right, root, nullptr);
        
        //左子树最大值为root_val，右子树最小为root_val
        return compare(root->left, min, root) && compare(root->right, root, max); 
    }
};
