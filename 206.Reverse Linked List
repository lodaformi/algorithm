/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
//递归方法
    ListNode* reverseList2(ListNode* head) {
        if  (head->next == nullptr){
            return head;
        }

        ListNode* last = reverseList(head->next);
        head->next->next = head;
        head->next = nullptr;

        return last;        
    }

//迭代方法
    ListNode* reverseList(ListNode* head) {
        ListNode* pre, *cur, *nxt;
        pre=nullptr;
        cur=head;
        nxt=head;
        while  (cur != nullptr) {
            nxt = cur->next;

            //head->next = pre;
            cur->next = pre;

            pre = cur;
            cur = nxt;
        }

        return pre;
    }
};
